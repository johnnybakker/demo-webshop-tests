name: TestSuite for DemoWebshop

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  unit:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore DetermineShippingCost/Tests/Tests.csproj 
    - name: Build
      run: dotnet build DetermineShippingCost/Tests/Tests.csproj --no-restore
    - name: Test
      run: dotnet test DetermineShippingCost/Tests/Tests.csproj --no-build --verbosity normal 

  saucelabs:
    runs-on: ubuntu-latest
    env:
        TEST_PLATFORM_NAME: Windows 11
        TEST_BROWSER_NAME: firefox
        TEST_BROWSER_VERSION: latest
        SAUCELABS_NAME: ${{ github.repository }}
        SAUCELABS_USERNAME: ${{ secrets.SAUCELABS_USERNAME }}
        SAUCELABS_ACCESS_KEY: ${{ secrets.SAUCELABS_ACCESS_KEY }} 
        #SAUCELABS_BUILD: ${{ github.sha }}
        SAUCELABS_BUILD: ${{ github.ref_name }}
        SAUCELABS_URL: https://ondemand.eu-central-1.saucelabs.com:443/wd/hub            

    steps:
    - name: Checkout project
      uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B test --file pom.xml
  
  soapui:
    runs-on: ubuntu-latest
    env:
        soapui-projectfile-location: /src/test/soapui
        soapui-projectfile-name: AvansTestSuite.xml
        soapui-volume-name: /project

    steps:
      - name: Checkout project
        uses: actions/checkout@v3
      - uses: addnab/docker-run-action@v3
        with:
          image: smartbear/soapuios-testrunner
          options: -v=${{ github.workspace }}${{ env.soapui-projectfile-location }}:${{ env.soapui-volume-name }} --entrypoint /bin/bash
          run: |
              ./$SOAPUI_DIR/bin/testrunner.sh ${{ env.soapui-volume-name }}/${{ env.soapui-projectfile-name }}

  neoload:
    runs-on: ubuntu-latest
    env: 
        neoload-projectfile-location: /src/test/neoload/
        neoload-projectfile-name: demowebshopp.zip
    steps:
    - name: Checkout project
      uses: actions/checkout@v3

    - name: Install Neoload CLI
      run: pip3 install -U neoload

    - name: "Prepare NeoLoad test"
      run: >
            neoload login --url https://neoload-api.saas.neotys.com/ 2715b6aafd2f6eb568e7d62b709e5a28a4cf6df9711db161 \
                    test-settings --zone "EUGGCP" --scenario 'HappyFlow' createorpatch "My Github Test With CLI" \
                    project --path ${{ github.workspace }}${{ env.neoload-projectfile-location }}/${{ env.neoload-projectfile-name }} upload
        
    - name: Run Neoload test
      run: neoload run --name "Github Test With NeoLoad CLI"
        
    - name: "Generate Test Report"
      run: neoload test-results

